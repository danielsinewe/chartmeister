{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/danielsinewe/chartmeister/chartmeister-schema.json",
  "title": "Chartmeister File Format Schema",
  "description": "JSON schema for .chartmeister files - a format for saving and loading chart data, similar to Excalidraw's .excalidraw format. Version 3 includes fixes for anchorToBaseline property handling in total bars.",
  "type": "object",
  "required": [
    "type",
    "version",
    "source",
    "elements",
    "appState",
    "files"
  ],
  "properties": {
    "type": {
      "type": "string",
      "const": "chartmeister",
      "description": "The type of the Chartmeister schema"
    },
    "version": {
      "type": "integer",
      "minimum": 1,
      "description": "The version of the Chartmeister schema. Version 3 includes fixes for anchorToBaseline property handling in total bars."
    },
    "source": {
      "type": "string",
      "const": "chartmeister-app",
      "description": "The source URL of the Chartmeister application"
    },
    "elements": {
      "type": "array",
      "description": "An array of objects representing chart elements on canvas",
      "items": {
        "type": "object",
        "required": [
          "id",
          "type"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the element"
          },
          "type": {
            "type": "string",
            "enum": [
              "bar",
              "connector",
              "annotation",
              "title",
              "subtitle",
              "legend"
            ],
            "description": "The type of chart element"
          },
          "x": {
            "type": "number",
            "description": "X coordinate of the element"
          },
          "y": {
            "type": "number",
            "description": "Y coordinate of the element"
          },
          "width": {
            "type": "number",
            "description": "Width of the element"
          },
          "height": {
            "type": "number",
            "description": "Height of the element"
          },
          "strokeColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$",
            "description": "Stroke color in hex format"
          },
          "backgroundColor": {
            "type": "string",
            "pattern": "^#[0-9A-Fa-f]{6}$",
            "description": "Background color in hex format"
          },
          "strokeWidth": {
            "type": "number",
            "minimum": 0,
            "description": "Width of the stroke"
          },
          "locked": {
            "type": "boolean",
            "description": "Whether the element is locked from editing"
          },
          "customData": {
            "type": "object",
            "description": "Custom data associated with the element",
            "properties": {
              "originalData": {
                "type": "object",
                "description": "Original data from the chart"
              }
            }
          },
          "chartData": {
            "type": "object",
            "description": "Chart-specific data for the element",
            "properties": {
              "label": {
                "type": "string",
                "description": "Label for the chart element"
              },
              "value": {
                "type": "number",
                "description": "Value of the chart element"
              },
              "type": {
                "type": "string",
                "enum": [
                  "total",
                  "change",
                  "start",
                  "positive",
                  "negative"
                ],
                "description": "Type of chart element"
              },
              "cumulative": {
                "type": "number",
                "description": "Cumulative value"
              },
              "editable": {
                "type": "boolean",
                "description": "Whether the element is editable"
              },
              "showValueLabel": {
                "type": "boolean",
                "description": "Whether to show value label"
              },
              "showCategoryLabel": {
                "type": "boolean",
                "description": "Whether to show category label"
              },
              "color": {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$",
                "description": "Color of the element"
              },
              "borderColor": {
                "type": "string",
                "pattern": "^#[0-9A-Fa-f]{6}$",
                "description": "Border color of the element"
              },
              "borderWidth": {
                "type": "number",
                "minimum": 0,
                "description": "Border width of the element"
              },
              "segments": {
                "type": "array",
                "description": "Array of segments for segmented bars",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the segment"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for the segment"
                    },
                    "value": {
                      "type": "number",
                      "description": "Value of the segment"
                    },
                    "color": {
                      "type": "string",
                      "pattern": "^#[0-9A-Fa-f]{6}$",
                      "description": "Color of the segment"
                    },
                    "borderColor": {
                      "type": "string",
                      "pattern": "^#[0-9A-Fa-f]{6}$",
                      "description": "Border color of the segment"
                    },
                    "borderWidth": {
                      "type": "number",
                      "minimum": 0,
                      "description": "Border width of the segment"
                    },
                    "locked": {
                      "type": "boolean",
                      "description": "Whether the segment is locked"
                    },
                    "showValueLabel": {
                      "type": "boolean",
                      "description": "Whether to show value label for the segment"
                    },
                    "valueLabelOffsetX": {
                      "type": "number",
                      "description": "X offset for value label"
                    },
                    "valueLabelOffsetY": {
                      "type": "number",
                      "description": "Y offset for value label"
                    }
                  }
                },
                "computeTotal": {
                  "type": "boolean",
                  "description": "Whether the element should be automatically calculated from previous values"
                },
                "anchorToBaseline": {
                  "type": "boolean",
                  "description": "Whether the element is anchored to the baseline"
                }
              }
            }
          }
        }
      }
    }
  }
}